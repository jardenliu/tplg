name: Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
            rust: stable
          - platform: macos-latest
            target: x86_64-apple-darwin
            rust: stable
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            rust: stable
          - platform: windows-latest
            target: i686-pc-windows-msvc
            rust: stable
          - platform: windows-latest
            target: aarch64-pc-windows-msvc
            rust: stable
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            rust: stable
          - platform: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu
            rust: stable

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
        override: true

    - name: Build
      run: cargo build --release

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-tplg
        path: target/release/tplg

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ matrix.target }}-tplg/tplg
          asset_name: ${{ matrix.target }}-tplg
          asset_content_type: application/octet-stream